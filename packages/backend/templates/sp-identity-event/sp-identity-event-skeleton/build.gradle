plugins {
    id "java-library"
    id "maven-publish"
    id "jacoco"
    id "io.freefair.aspectj.post-compile-weaving" version "5.2.1"
    id "io.freefair.lombok" version "5.2.1"
    id 'com.github.jk1.dependency-license-report' version '1.16'
}

subprojects { subproject ->
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'io.freefair.aspectj.post-compile-weaving'
    apply plugin: "io.freefair.lombok"

    aspectj {
        version = "1.9.5"
    }

    def shouldPublish = subproject.name == 'sp-identity-event-api'

    if (shouldPublish) {
        apply plugin: 'maven-publish'
    }

    group = 'com.sailpoint'
    version = project.hasProperty('customVersion') ? project['customVersion'] : 'integration-SNAPSHOT'

    if (subproject.name == "sp-identity-event-api-test" || subproject.name == "sp-identity-event-api") {
        compileJava {
            sourceCompatibility = '1.8'
            targetCompatibility = '1.8'

            options.encoding = 'UTF-8'
            ajc.options.compilerArgs << "-Xlint:ignore" << "-warn:none"
        }

        compileTestJava {
            sourceCompatibility = '1.8'
            targetCompatibility = '1.8'

            options.encoding = 'UTF-8'
            ajc.options.compilerArgs << "-Xlint:ignore" << "-warn:none"
        }
    } else {
        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(11)
            }
        }

        compileJava {
            sourceCompatibility = '11'
            targetCompatibility = '11'

            options.encoding = 'UTF-8'
            ajc.options.compilerArgs << "-Xlint:ignore" << "-warn:none"
        }

        compileTestJava {
            sourceCompatibility = '11'
            targetCompatibility = '11'

            options.encoding = 'UTF-8'
            ajc.options.compilerArgs << "-Xlint:ignore" << "-warn:none"
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            name "release"
            url "s3://sptcbu-mvn-repo/release"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }

        maven {
            name "snapshot"
            url "s3://sptcbu-mvn-repo/snapshot"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }

        maven {
            name "DynamoDB Local Release Repository - US West (Oregon) Region"
            url "http://s3-us-west-2.amazonaws.com/dynamodb-local/release"
        }

        maven {
            // needed for opensaml 2.6.6
            url 'https://build.shibboleth.net/nexus/content/repositories/releases/'
        }
    }

    configurations {
        runtime.exclude(group: "org.slf4j", module: "slf4j-log4j12")
    }

    publishing {
        repositories {
            maven {
                authentication {
                    awsIm(AwsImAuthentication)
                }
                def isSnapshot = subproject.version.contains('SNAPSHOT')
                url = isSnapshot ? "s3://sptcbu-mvn-repo/snapshot" : "s3://sptcbu-mvn-repo/release"
            }
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
        }
    }

    if (subproject.hasProperty('jacocoTestCoverageVerification')) {
        subproject.check.dependsOn subproject.jacocoTestCoverageVerification
    }

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }

    generateLombokConfig.enabled = false
}

// Top level repositories available to all projects
repositories {
    mavenCentral()
    mavenLocal()
}
