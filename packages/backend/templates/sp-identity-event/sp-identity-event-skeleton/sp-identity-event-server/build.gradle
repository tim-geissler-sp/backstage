plugins {
	id 'org.springframework.boot' version '2.3.12.RELEASE'
	id "com.palantir.docker" version "0.22.1"
	id "org.flywaydb.flyway" version "6.0.6"
}

jar {
	archivesBaseName = "sp-identity-event-server"
	project.version = null
}

flyway {
	url = "jdbc:postgresql://localhost:5432/postgres"
	user = "postgres"
	password = "2thecloud"
}

dependencies {
	implementation(platform("com.sailpoint:atlas-boot-platform:${project.ATLAS_BOOT_VERSION}"))

	implementation(project(":sp-identity-event-api"))

	implementation("com.sailpoint:atlas-boot-core")
	implementation("com.sailpoint:atlas-boot-discovery")
	implementation("com.sailpoint:atlas-boot-event")
	implementation("com.sailpoint:atlas-boot-api-common")
	implementation("com.sailpoint:atlas-boot-messaging")
	implementation("com.sailpoint:atlas-boot-metrics")
	implementation("com.sailpoint:atlas-boot-ams-client")
	implementation("com.sailpoint:atlas-boot-chronicle-client")
	implementation("com.sailpoint:atlas-boot-sync")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa")
	implementation("org.flywaydb:flyway-core")
	implementation("org.postgresql:postgresql")
	implementation("com.sailpoint:saas-kafka-topics:${project.KAFKA_TOPICS_VERSION}")
	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.amazonaws:aws-java-sdk-core")
	implementation("com.amazonaws:aws-java-sdk-dynamodb")

	testImplementation("com.sailpoint:atlas-boot-test")
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("junit:junit")
	testImplementation("org.mockito:mockito-core")
	testImplementation('com.amazonaws:DynamoDBLocal')

	aspect(platform("com.sailpoint:atlas-boot-platform:$project.ATLAS_BOOT_VERSION"))
	aspect("com.sailpoint:metrics")
	testImplementation("org.testcontainers:postgresql:1.15.0-rc2")
	testImplementation("org.testcontainers:kafka:1.17.2")
	testImplementation("org.testcontainers:localstack:0.11.3")

	//jaeger tracing
	implementation("com.sailpoint:atlas-boot-tracing")
	
	//codeguru profiling
	implementation("com.sailpoint:atlas-boot-profiling")
}

bootJar {
	manifest {
		attributes 'Implementation-Title': 'sp-identity-event'
		attributes 'Implementation-Version': project.hasProperty('customVersion') ? project['customVersion'] : 'Unavailable'
		attributes 'Implementation-Vendor' : "SailPoint"
		attributes 'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date())
	}
}

task preDocker(type:Exec)  {
	println 'AWS login'
	commandLine 'sh', './login.sh'
	ignoreExitValue true
}

docker {
	name "${jar.baseName}"
	tags "latest"
	dockerfile = file('../dockerfiles/sp-identity-event-server/Dockerfile')
	noCache true
	copySpec.from(jar).into('target')
}

task publishDocker(type:Exec)  {
	println 'Push docker'
	commandLine 'sh', './pushDocker.sh'
	standardOutput = new ByteArrayOutputStream()
	ext.output = {
		return standardOutput.toString()
	}
}

docker.dependsOn(preDocker)

task copyNativeDeps(type: Copy) {
	from(configurations.testRuntimeClasspath) {
		include "*.dylib"
		include "*.so"
		include "*.dll"
	}
	into 'build/libs'
}

test.dependsOn copyNativeDeps
test.doFirst {
	systemProperty "java.library.path", 'build/libs'
}
